-- MySQL Script generated by MySQL Workbench
-- Sun Jan 28 14:30:44 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema the-guest
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema the-guest
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `the-guest` DEFAULT CHARACTER SET utf8 ;
USE `the-guest` ;

-- -----------------------------------------------------
-- Table `the-guest`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `the-guest`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(32) NOT NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  `role` ENUM('User', 'Facility', 'Admin') NOT NULL DEFAULT 'User',
  `first_name` VARCHAR(255) NOT NULL,
  `last_name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `the-guest`.`tokens`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `the-guest`.`tokens` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `content` VARCHAR(3000) NOT NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_tokens_users_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_tokens_users`
    FOREIGN KEY (`user_id`)
    REFERENCES `the-guest`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `the-guest`.`customers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `the-guest`.`customers` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`name` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `the-guest`.`rooms`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `the-guest`.`rooms` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  `room_code` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`name` ASC) VISIBLE,
  UNIQUE INDEX `room_code_UNIQUE` (`room_code` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `the-guest`.`meetings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `the-guest`.`meetings` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(255) NOT NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  `start_time` TIMESTAMP NULL,
  `finish_time` TIMESTAMP NULL,
  `description` VARCHAR(255) NULL,
  `customer_id` INT NOT NULL,
  `room_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_meetings_customers1_idx` (`customer_id` ASC) VISIBLE,
  INDEX `fk_meetings_rooms1_idx` (`room_id` ASC) VISIBLE,
  CONSTRAINT `fk_meetings_customers1`
    FOREIGN KEY (`customer_id`)
    REFERENCES `the-guest`.`customers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_meetings_rooms1`
    FOREIGN KEY (`room_id`)
    REFERENCES `the-guest`.`rooms` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `the-guest`.`meeting_participants`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `the-guest`.`meeting_participants` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  `has_joined` TINYINT NOT NULL DEFAULT 0,
  `meeting_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_meeting_participants_meetings1_idx` (`meeting_id` ASC) VISIBLE,
  INDEX `fk_meeting_participants_users1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_meeting_participants_meetings1`
    FOREIGN KEY (`meeting_id`)
    REFERENCES `the-guest`.`meetings` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_meeting_participants_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `the-guest`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
